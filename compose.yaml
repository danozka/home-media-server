name: ${MEDIA_SERVER_NAME}
networks:
  default:
    name: ${MEDIA_SERVER_NAME}-network
services:
  autoheal:
    container_name: autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    image: willfarrell/autoheal:latest
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
  bazarr:
    container_name: bazarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
    healthcheck:
      test: curl -f http://${MEDIA_SERVER_IP}:${BAZARR_PORT} || exit 1
    image: lscr.io/linuxserver/bazarr:latest
    ports:
      - "${BAZARR_PORT}:6767"
    restart: unless-stopped
    volumes:
      - ${MEDIA_SERVER_CONFIG_PATH}/bazarr:/config
      - ${MEDIA_SERVER_MOVIES_PATH}:/movies
      - $MEDIA_SERVER_TV_PATH}:/tv
  duckdns:
    container_name: duckdns
    environment:
      - PUID=$USER_ID}
      - PGID=$GROUP_ID}
      - TZ=$TIME_ZONE}
      - SUBDOMAINS=$DUCKDNS_SUBDOMAIN}
      - TOKEN=$DUCKDNS_TOKEN}
      - LOG_FILE=false
    healthcheck:
      test: pgrep -f /app/duck.sh || exit 1
    image: lscr.io/linuxserver/duckdns:latest
    restart: unless-stopped
    volumes:
      - $MEDIA_SERVER_CONFIG_PATH}/duckdns:/config
  jackett:
    container_name: jackett
    environment:
      - PUID=$USER_ID}
      - PGID=$GROUP_ID}
      - TZ=$TIME_ZONE}
      - AUTO_UPDATE=true
    healthcheck:
      test: curl -f http://${MEDIA_SERVER_IP}:${JACKETT_PORT} || exit 1
    image: lscr.io/linuxserver/jackett:latest
    ports:
      - "${JACKETT_PORT}:9117"
    restart: unless-stopped
    volumes:
      - ${MEDIA_SERVER_CONFIG_PATH}/jackett:/config
      - ${MEDIA_SERVER_DOWNLOADS_PATH}:/downloads
  nordlynx:
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    container_name: nordlynx
    environment:
      - PRIVATE_KEY=${NORDLYNX_PRIVATE_KEY}
      - NET_LOCAL=${MEDIA_SERVER_NETWORK_CIDR}
      - TZ=${TIME_ZONE}
      - QUERY=filters\[country_id\]=209&filters\[servers_groups\]\[identifier\]=legacy_p2p
    image: ghcr.io/bubuntux/nordlynx
    ports:
      - "${STREMIO_WEBUI_PORT}:8080"
      - "${QBITTORRENT_WEBUI_PORT}:8090"
      - "${STREMIO_SERVER_PORT}:12470"
    restart: unless-stopped
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.conf.all.rp_filter=2
      - net.ipv6.conf.all.disable_ipv6=1
  plex:
    container_name: plex
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
      - VERSION=docker
    healthcheck:
      test: curl -f http://${MEDIA_SERVER_IP}:32400/web || exit 1
    image: lscr.io/linuxserver/plex:latest
    network_mode: host
    restart: unless-stopped
    volumes:
      - ${MEDIA_SERVER_CONFIG_PATH}/plex:/config
      - ${MEDIA_SERVER_MOVIES_PATH}:/movies
      - ${MEDIA_SERVER_TV_PATH}:/tv
      - /tmp/plex:/transcode
  prowlarr:
    container_name: prowlarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
    healthcheck:
      test: curl -f http://${MEDIA_SERVER_IP}:${PROWLARR_PORT} || exit 1
    image: lscr.io/linuxserver/prowlarr:develop
    ports:
      - "${PROWLARR_PORT}:9696"
    restart: unless-stopped
    volumes:
      - ${MEDIA_SERVER_CONFIG_PATH}/prowlarr:/config
  qbittorrent:
    container_name: qbittorrent
    depends_on:
      nordlynx:
        condition: service_healthy
        restart: true
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
      - WEBUI_PORT=8090
      - TORRENTING_PORT=57389
    healthcheck:
      test: curl -f http://${MEDIA_SERVER_IP}:${QBITTORRENT_WEBUI_PORT} || exit 1
    image: lscr.io/linuxserver/qbittorrent:latest
    network_mode: service:nordlynx
    restart: unless-stopped
    volumes:
      - ${MEDIA_SERVER_CONFIG_PATH}/qbittorrent:/config
      - ${MEDIA_SERVER_DOWNLOADS_PATH}:/downloads
  radarr:
    container_name: radarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
    healthcheck:
      test: curl -f http://${MEDIA_SERVER_IP}:${RADARR_PORT} || exit 1
    image: lscr.io/linuxserver/radarr:latest
    ports:
      - "${RADARR_PORT}:7878"
    restart: unless-stopped
    volumes:
      - ${MEDIA_SERVER_CONFIG_PATH}/radarr:/config
      - ${MEDIA_SERVER_MOVIES_PATH}:/movies
      - ${MEDIA_SERVER_DOWNLOADS_PATH}:/downloads
  sonarr:
    container_name: sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
    healthcheck:
      test: curl -f http://${MEDIA_SERVER_IP}:${SONARR_PORT} || exit 1
    image: lscr.io/linuxserver/sonarr:latest
    ports:
      - "${SONARR_PORT}:8989"
    restart: unless-stopped
    volumes:
      - ${MEDIA_SERVER_CONFIG_PATH}/sonarr:/config
      - ${MEDIA_SERVER_TV_PATH}:/tv
      - ${MEDIA_SERVER_DOWNLOADS_PATH}:/downloads
  stremio:
    container_name: stremio
    depends_on:
      nordlynx:
        condition: service_healthy
        restart: true
    environment:
      - NO_CORS=1
      - IPADDRESS=${MEDIA_SERVER_IP}
    healthcheck:
      test: (curl -f https://${STREMIO_HOSTNAME}:${STREMIO_WEBUI_PORT}/ && curl -f https://${STREMIO_HOSTNAME}:${STREMIO_SERVER_PORT}/) || exit 1
    image: tsaridas/stremio-docker:latest
    network_mode: service:nordlynx
    restart: unless-stopped
    volumes:
      - ${MEDIA_SERVER_DOWNLOADS_PATH}/stremio:/root/.stremio-server
  wireguard:
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    container_name: wireguard
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIME_ZONE}
      - SERVERURL=${DUCKDNS_SUBDOMAIN}.duckdns.org
      - SERVERPORT=51820
      - PEERS=3
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.13.13.0
      - ALLOWEDIPS=${MEDIA_SERVER_IP}
      - LOG_CONFS=true
    healthcheck:
      test: wg show || exit 1
    image: lscr.io/linuxserver/wireguard:latest
    ports:
      - "${WIREGUARD_PORT}:51820/udp"
    restart: unless-stopped
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - ${MEDIA_SERVER_CONFIG_PATH}/wireguard:/config
      - /lib/modules:/lib/modules
